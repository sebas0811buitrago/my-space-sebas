---
import { cn } from "@/shared/utils/cn"
import type { HTMLAttributes } from "astro/types"

type Props = HTMLAttributes<"a"> & {
	isHomeLink?: boolean
}

const { class: className, id, isHomeLink, ...props } = Astro.props
---

<a
	class={cn(
		"group flex items-center gap-2 text-neutral-secondary hover:font-bold hover:text-primary text-sm p-3 navigation-item",
		className
	)}
	{...props}
>
	<hr class="w-6 transition-[width] duration-500 group-hover:w-14" />
	<slot />
</a>

<style></style>

<script define:vars={{ isHomeLink }} is:inline>
	const links = document.querySelectorAll(".navigation-item")

	const updateLinkStylesWhenIsActive = () => {
		const currentPath = `${window.location.pathname}${window.location.hash ?? ""}`

		links.forEach((link) => {
			if (
				link.getAttribute("href") === currentPath ||
				(Boolean(isHomeLink) && currentPath === "/")
			) {
				link.classList.add("text-primary")
				link.classList.add("font-bold")
				link.querySelector("hr")?.classList.remove("w-6")
				link.querySelector("hr")?.classList.add("w-14")
			} else {
				link.classList.remove("text-primary")
				link.classList.remove("font-bold")
				link.querySelector("hr")?.classList.remove("w-14")
				link.querySelector("hr")?.classList.add("w-6")
			}
		})
	}

	updateLinkStylesWhenIsActive()

	window.addEventListener("hashchange", updateLinkStylesWhenIsActive)
	window.addEventListener("", updateLinkStylesWhenIsActive)
</script>
